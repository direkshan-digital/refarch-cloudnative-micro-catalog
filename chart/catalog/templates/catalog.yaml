apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.service.name }}
  labels:
    {{- include "catalog.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "catalog.labels" . | indent 6 }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  template:
    metadata:
      labels:
        {{- include "catalog.labels" . | indent 8 }}
    spec:
      containers:
      - name: "{{  .Chart.Name  }}"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: IfNotPresent
{{ if .Values.istio.enabled }}
{{ else }}
        readinessProbe:
          httpGet:
            path: /health
            port: 9080
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 60
          failureThreshold: 6
        livenessProbe:
          httpGet:
            path: /
            port: 9080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 60
          failureThreshold: 6
{{ end }}
        resources:
        {{- include "catalog.resources" . | indent 10 }}
        env:
          {{ if .Values.travis }} 
          - name: inventory_health
            value: "http://{{ .Values.inventoryRelease }}-{{ .Values.service.inventory }}:9080/health"
          - name: elasticsearch_url
            value: "http://{{ .Values.service.elasticsearchHost }}:9200"
          {{ else }}
          - name: inventory_health
            value: "http://{{ .Release.Name }}-inventory:9080/health"
          - name: elasticsearch_url
            value: "http://{{ .Release.Name }}-catalog-elasticsearch:9200"
          {{ end }}
          - name: zipkinHost
            value: "{{ .Release.Name }}-{{ .Values.service.zipkinName }}"
          - name: zipkinPort
            value: "{{ .Values.service.zipkinPort }}"
          - name: PORT
            value: "{{ .Values.service.servicePort }}"
          - name: APPLICATION_NAME
            value: "{{ .Release.Name }}"
          - name: IBM_APM_SERVER_URL
            valueFrom:
              secretKeyRef:
                name: apm-server-config
                key: ibm_apm_server_url
                optional: true
          - name: IBM_APM_KEYFILE
            valueFrom:
              secretKeyRef:
                name: apm-server-config
                key: ibm_apm_keyfile
                optional: true
          - name: IBM_APM_KEYFILE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: apm-server-config
                key: ibm_apm_keyfile_password
                optional: true
          - name: IBM_APM_INGRESS_URL
            valueFrom:
              secretKeyRef:
                name: apm-server-config
                key: ibm_apm_ingress_url
                optional: true
          - name: IBM_APM_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: apm-server-config
                key: ibm_apm_access_token
                optional: true
        volumeMounts:
        - name: config-volume
          mountPath: {{ .Values.volumes.mountPath }}
      volumes:
      - name: config-volume
        configMap:
          name: {{ .Release.Name }}-{{ .Chart.Name }}-config
